<?xml version="1.0" encoding="UTF-8"?>
<web-app xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
	<display-name>SpringSecurityDemo</display-name>
	
	<listener>
	  <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<context-param>
	    <param-name>contextConfigLocation</param-name>
	    <param-value> <!-- NOTE the order of context files to ensure the class defined before being used -->
	        /WEB-INF/spring/springSecurityDemo-appConfig.xml
	        /WEB-INF/spring/springSecurityDemo-securityConfig.xml
	    </param-value>
	</context-param>
	
	<servlet>
	  <servlet-name>SpringSecurityDemo</servlet-name>
	  <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	  <init-param>
	    <param-name>contextConfigLocation</param-name>
	    <param-value>/WEB-INF/spring/springSecurityDemo-servletConfig.xml</param-value>
	  </init-param>
	  <load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
	  <servlet-name>SpringSecurityDemo</servlet-name>
	  <url-pattern>/</url-pattern> <!-- better give a folder for DispatcherServlet mapping Spring Controllers, like /controller/* -->
	  <!-- 
	    The /* on a servlet overrides all other servlets, including all servlets provided by the servletcontainer such as the default servlet and the JSP servlet.
		The / doesn't override any other servlet. It only replaces the servletcontainer's builtin default servlet for all requests which doesn't match any other registered servlet.
		Then there's also the empty string URL pattern . This will be invoked when the context root is requested.
	  -->
	</servlet-mapping>
	
	<filter> <!-- intercept before DispatchServlet -->
	    <filter-name>springSecurityFilterChain</filter-name>
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	
	<filter-mapping>
	    <filter-name>springSecurityFilterChain</filter-name>
	    <url-pattern>/*</url-pattern> <!-- intercept every URL including pages, servlets and resources like js, css or images. need to configure properly in security configuration xml as well -->
	</filter-mapping>
</web-app>